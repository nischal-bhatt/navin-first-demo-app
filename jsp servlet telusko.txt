how does servlet works 

client and a server machine 
client sends a request to server, expecting a page 
page can be static or dynamic --> static it means it is already made
dynamic means it will be built at runtime 

client sends request to server
server has a file --> that file goes to client (request response done)


but now lets say u r asking for a page that will be built at runtime
client sends request to server, but server says hold on i dun have any page (server only has index.html for now)
so u have to build that page
request goes to a helper application (web container)
in this web container, u will have servlet --> 


servlet is basically a java file that can take requests from the client

and it can process that request and it can provide u a response in the form of an html page



servlet will process ur request (fetch the values) --> and it will send the html page
client's request if it is dynamic it will go to web container (tomcat) 



dynamic request goes to tomcat --> now tomcat says ive got a request, but that request
is for abc.htm .. and we dont have that page.. we have to build it..
that request goes to servlet (servlet will be a java class) 

inside ur container --> u have a special file called deployment descriptor in which 
u mention for which request which servlet should be called 
each request will be mapped to a servlet 
deployment descriptor (web.xml) 

a servlet is a normal class which extends httpservlet (it will provide all the features u need)


response will be in html format 


we can use annotations on servlet --> to replace web.xml 

===============

eclipse setup and tour 

IDE integrated development environment 
Netbeans, eclipse, intellij

eclipse u can use for free for web environments 


HttpServletRequest -->  the input params must be put in an object going from client to server
HttpServletResponse -->  response will be sent in an object(data, html tags, send a video) 

response object will have all data which client needs (text, html, video) 
u can specify what type of data u r sending back to the client


we dont have to create HttpServletRequest and the response object (tomcat gives)
you just have to specify the references and tomcat will give it to u
and that is why when you want to run a web app u need a tomcat server


calling a servlet from a servlet 

if you want to call a servlet from a servlet and that the ending servlet resides on
another website, then browser should be informed that he is getting redirected -> in this case 
we have to use send redirect. with
requestdispatcher, the client doesnt know about the redirection 

therefore in send redirect --> 2 different requests are being sent 

in requestdispatcher --> the same request object is forwarded to the other servlet


in the case of send redirect, 
lets say servlet 1 generates a variable x and it wants to send this to servlet y via 
send redirect
in this case, session management must be used 

servletconfig - get the initial values of the servlet
servletcontext -

why we need jsp ? 
what if we want to change the background color? --> if you want to send any tags, 
tyou have to write out the entire tag.. refer to source code

as a programmer even if u write jsp code, that jsp code 
gets converted into servlets 

when u run the program, jsp gets converted to servlet 
how is this happening ? 

in jsp we have html tags
below is example of jsp
--------------------------------
<html>
<body>

    <%
       int i = Integer.parseInt(request.getParameter("t1"));
       int j = same thing above
       
       int k = i+j;
       
       out.print(k);
       
    %>

</body>

</html>
--------------------------------
for servlet
1. we have to create a class
2. extend HttpServlet
3. create method doGet
4. pass 2 params
5. create obj of printwriter
--------------------------------

run jsp 
it will convert itself into a servlet
classname --> jsp name will become servlet name demojsp
              extend HttpServlet jsp will automatically do
              request and response will be provided by tomcat
              the <% %> (scriptlet) will be copied into the servlet
              these are implicit objects in jsp 
              whatever u write inside <% %> will go inside service method 
              <%! 
                 this section is declaration ! 
                 whatevr u write inside here 
                 will go inside declaration section of servlet!
                 whatever u want inside class but outside of 
                 service method will go into <%! %>
              %>
              
              now lets say in jsp u want to import package
              in servlet we just import coz its a java class
              
              in jsp how?
              
              for jsp --> we have 1 more tag
              
              directive
              <%@page import = "java.util.Date" %>
              
              the above is for import!
              
              
              so basically --> try to think of 
                               jsp how it converts to a servlet
                               
                               
              <%=  %>         
              the above will go inside out.print(k) in the 
              corresponding servlet!   
              
              
              basic idea is jsp gets converted into a servlet
              
              if u want to show a page, jsp is better
              if you just want to process, use servlet     